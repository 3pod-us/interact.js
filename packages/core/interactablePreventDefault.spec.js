import test from '@interactjs/_dev/test/test';
import drag from '@interactjs/actions/drag';
import { autoStart } from '@interactjs/auto-start';
import interactablePreventDefault from './interactablePreventDefault';
import * as helpers from './tests/_helpers';
test('interactablePreventDefault', t => {
    const { scope, interactable, } = helpers.testEnv({
        plugins: [interactablePreventDefault, autoStart, drag],
    });
    const { MouseEvent, Event, } = scope.window;
    interactable.draggable({});
    const mouseEvent = new MouseEvent('mousedown', { bubbles: true });
    const nativeDragStart = new Event('dragstart', { bubbles: true });
    let nativeDragStartPrevented = false;
    nativeDragStart.preventDefault = () => {
        nativeDragStartPrevented = true;
    };
    scope.document.body.dispatchEvent(mouseEvent);
    scope.document.body.dispatchEvent(nativeDragStart);
    t.ok(nativeDragStartPrevented, 'native dragstart is prevented on interactable ');
    t.end();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJhY3RhYmxlUHJldmVudERlZmF1bHQuc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImludGVyYWN0YWJsZVByZXZlbnREZWZhdWx0LnNwZWMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxJQUFJLE1BQU0sNEJBQTRCLENBQUE7QUFDN0MsT0FBTyxJQUFJLE1BQU0sMEJBQTBCLENBQUE7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHdCQUF3QixDQUFBO0FBQ2xELE9BQU8sMEJBQTBCLE1BQU0sOEJBQThCLENBQUE7QUFDckUsT0FBTyxLQUFLLE9BQU8sTUFBTSxrQkFBa0IsQ0FBQTtBQUUzQyxJQUFJLENBQUMsNEJBQTRCLEVBQUUsQ0FBQyxDQUFDLEVBQUU7SUFDckMsTUFBTSxFQUNKLEtBQUssRUFDTCxZQUFZLEdBQ2IsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ2xCLE9BQU8sRUFBRSxDQUFDLDBCQUEwQixFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUM7S0FDdkQsQ0FBQyxDQUFBO0lBRUYsTUFBTSxFQUNKLFVBQVUsRUFDVixLQUFLLEdBQ04sR0FBRyxLQUFLLENBQUMsTUFBYSxDQUFBO0lBRXZCLFlBQVksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUE7SUFFMUIsTUFBTSxVQUFVLEdBQWUsSUFBSSxVQUFVLENBQUMsV0FBVyxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUE7SUFDN0UsTUFBTSxlQUFlLEdBQVUsSUFBSSxLQUFLLENBQUMsV0FBVyxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUE7SUFDeEUsSUFBSSx3QkFBd0IsR0FBRyxLQUFLLENBQUE7SUFFcEMsZUFBZSxDQUFDLGNBQWMsR0FBRyxHQUFHLEVBQUU7UUFDcEMsd0JBQXdCLEdBQUcsSUFBSSxDQUFBO0lBQ2pDLENBQUMsQ0FBQTtJQUVELEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQTtJQUM3QyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLENBQUE7SUFFbEQsQ0FBQyxDQUFDLEVBQUUsQ0FBQyx3QkFBd0IsRUFBRSxnREFBZ0QsQ0FBQyxDQUFBO0lBRWhGLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQTtBQUNULENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHRlc3QgZnJvbSAnQGludGVyYWN0anMvX2Rldi90ZXN0L3Rlc3QnXG5pbXBvcnQgZHJhZyBmcm9tICdAaW50ZXJhY3Rqcy9hY3Rpb25zL2RyYWcnXG5pbXBvcnQgeyBhdXRvU3RhcnQgfSBmcm9tICdAaW50ZXJhY3Rqcy9hdXRvLXN0YXJ0J1xuaW1wb3J0IGludGVyYWN0YWJsZVByZXZlbnREZWZhdWx0IGZyb20gJy4vaW50ZXJhY3RhYmxlUHJldmVudERlZmF1bHQnXG5pbXBvcnQgKiBhcyBoZWxwZXJzIGZyb20gJy4vdGVzdHMvX2hlbHBlcnMnXG5cbnRlc3QoJ2ludGVyYWN0YWJsZVByZXZlbnREZWZhdWx0JywgdCA9PiB7XG4gIGNvbnN0IHtcbiAgICBzY29wZSxcbiAgICBpbnRlcmFjdGFibGUsXG4gIH0gPSBoZWxwZXJzLnRlc3RFbnYoe1xuICAgIHBsdWdpbnM6IFtpbnRlcmFjdGFibGVQcmV2ZW50RGVmYXVsdCwgYXV0b1N0YXJ0LCBkcmFnXSxcbiAgfSlcblxuICBjb25zdCB7XG4gICAgTW91c2VFdmVudCxcbiAgICBFdmVudCxcbiAgfSA9IHNjb3BlLndpbmRvdyBhcyBhbnlcblxuICBpbnRlcmFjdGFibGUuZHJhZ2dhYmxlKHt9KVxuXG4gIGNvbnN0IG1vdXNlRXZlbnQ6IE1vdXNlRXZlbnQgPSBuZXcgTW91c2VFdmVudCgnbW91c2Vkb3duJywgeyBidWJibGVzOiB0cnVlIH0pXG4gIGNvbnN0IG5hdGl2ZURyYWdTdGFydDogRXZlbnQgPSBuZXcgRXZlbnQoJ2RyYWdzdGFydCcsIHsgYnViYmxlczogdHJ1ZSB9KVxuICBsZXQgbmF0aXZlRHJhZ1N0YXJ0UHJldmVudGVkID0gZmFsc2VcblxuICBuYXRpdmVEcmFnU3RhcnQucHJldmVudERlZmF1bHQgPSAoKSA9PiB7XG4gICAgbmF0aXZlRHJhZ1N0YXJ0UHJldmVudGVkID0gdHJ1ZVxuICB9XG5cbiAgc2NvcGUuZG9jdW1lbnQuYm9keS5kaXNwYXRjaEV2ZW50KG1vdXNlRXZlbnQpXG4gIHNjb3BlLmRvY3VtZW50LmJvZHkuZGlzcGF0Y2hFdmVudChuYXRpdmVEcmFnU3RhcnQpXG5cbiAgdC5vayhuYXRpdmVEcmFnU3RhcnRQcmV2ZW50ZWQsICduYXRpdmUgZHJhZ3N0YXJ0IGlzIHByZXZlbnRlZCBvbiBpbnRlcmFjdGFibGUgJylcblxuICB0LmVuZCgpXG59KVxuIl19