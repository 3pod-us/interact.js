import extend from '@interactjs/utils/extend';
import * as is from '@interactjs/utils/is';
import rectUtils from '@interactjs/utils/rect';
function start({ rect, startOffset, state, interaction, pageCoords }) {
    const { options } = state;
    const { elementRect } = options;
    const offset = extend({
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
    }, options.offset || {});
    if (rect && elementRect) {
        const restriction = getRestrictionRect(options.restriction, interaction, pageCoords);
        const widthDiff = (restriction.right - restriction.left) - rect.width;
        const heightDiff = (restriction.bottom - restriction.top) - rect.height;
        if (widthDiff < 0) {
            offset.left += widthDiff;
            offset.right += widthDiff;
        }
        if (heightDiff < 0) {
            offset.top += heightDiff;
            offset.bottom += heightDiff;
        }
        offset.left += startOffset.left - (rect.width * elementRect.left);
        offset.top += startOffset.top - (rect.height * elementRect.top);
        offset.right += startOffset.right - (rect.width * (1 - elementRect.right));
        offset.bottom += startOffset.bottom - (rect.height * (1 - elementRect.bottom));
    }
    state.offset = offset;
}
function set({ coords, interaction, state }) {
    const { options, offset } = state;
    const restriction = getRestrictionRect(options.restriction, interaction, coords);
    if (!restriction) {
        return;
    }
    const rect = rectUtils.xywhToTlbr(restriction);
    coords.x = Math.max(Math.min(rect.right - offset.right, coords.x), rect.left + offset.left);
    coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top + offset.top);
}
function getRestrictionRect(value, interaction, coords) {
    if (is.func(value)) {
        return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [coords.x, coords.y, interaction]);
    }
    else {
        return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element);
    }
}
const defaults = {
    enabled: false,
    restriction: null,
    elementRect: null,
    offset: null,
};
const restrict = {
    start,
    set,
    getRestrictionRect,
    defaults,
};
export default restrict;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9pbnRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInBvaW50ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxNQUFNLE1BQU0sMEJBQTBCLENBQUE7QUFDN0MsT0FBTyxLQUFLLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQTtBQUMxQyxPQUFPLFNBQVMsTUFBTSx3QkFBd0IsQ0FBQTtBQUU5QyxTQUFTLEtBQUssQ0FBRSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUU7SUFDbkUsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLEtBQUssQ0FBQTtJQUN6QixNQUFNLEVBQUUsV0FBVyxFQUFFLEdBQUcsT0FBTyxDQUFBO0lBQy9CLE1BQU0sTUFBTSxHQUFrQixNQUFNLENBQUM7UUFDbkMsSUFBSSxFQUFFLENBQUM7UUFDUCxHQUFHLEVBQUUsQ0FBQztRQUNOLEtBQUssRUFBRSxDQUFDO1FBQ1IsTUFBTSxFQUFFLENBQUM7S0FDVixFQUFFLE9BQU8sQ0FBQyxNQUFNLElBQUksRUFBRSxDQUFDLENBQUE7SUFFeEIsSUFBSSxJQUFJLElBQUksV0FBVyxFQUFFO1FBQ3ZCLE1BQU0sV0FBVyxHQUFHLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxDQUFBO1FBQ3BGLE1BQU0sU0FBUyxHQUFHLENBQUMsV0FBVyxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQTtRQUNyRSxNQUFNLFVBQVUsR0FBRyxDQUFDLFdBQVcsQ0FBQyxNQUFNLEdBQUcsV0FBVyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUE7UUFFdkUsSUFBSSxTQUFTLEdBQUcsQ0FBQyxFQUFFO1lBQ2pCLE1BQU0sQ0FBQyxJQUFJLElBQUksU0FBUyxDQUFBO1lBQ3hCLE1BQU0sQ0FBQyxLQUFLLElBQUks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QSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHRlbmQgZnJvbSAnQGludGVyYWN0anMvdXRpbHMvZXh0ZW5kJ1xuaW1wb3J0ICogYXMgaXMgZnJvbSAnQGludGVyYWN0anMvdXRpbHMvaXMnXG5pbXBvcnQgcmVjdFV0aWxzIGZyb20gJ0BpbnRlcmFjdGpzL3V0aWxzL3JlY3QnXG5cbmZ1bmN0aW9uIHN0YXJ0ICh7IHJlY3QsIHN0YXJ0T2Zmc2V0LCBzdGF0ZSwgaW50ZXJhY3Rpb24sIHBhZ2VDb29yZHMgfSkge1xuICBjb25zdCB7IG9wdGlvbnMgfSA9IHN0YXRlXG4gIGNvbnN0IHsgZWxlbWVudFJlY3QgfSA9IG9wdGlvbnNcbiAgY29uc3Qgb2Zmc2V0OiBJbnRlcmFjdC5SZWN0ID0gZXh0ZW5kKHtcbiAgICBsZWZ0OiAwLFxuICAgIHRvcDogMCxcbiAgICByaWdodDogMCxcbiAgICBib3R0b206IDAsXG4gIH0sIG9wdGlvbnMub2Zmc2V0IHx8IHt9KVxuXG4gIGlmIChyZWN0ICYmIGVsZW1lbnRSZWN0KSB7XG4gICAgY29uc3QgcmVzdHJpY3Rpb24gPSBnZXRSZXN0cmljdGlvblJlY3Qob3B0aW9ucy5yZXN0cmljdGlvbiwgaW50ZXJhY3Rpb24sIHBhZ2VDb29yZHMpXG4gICAgY29uc3Qgd2lkdGhEaWZmID0gKHJlc3RyaWN0aW9uLnJpZ2h0IC0gcmVzdHJpY3Rpb24ubGVmdCkgLSByZWN0LndpZHRoXG4gICAgY29uc3QgaGVpZ2h0RGlmZiA9IChyZXN0cmljdGlvbi5ib3R0b20gLSByZXN0cmljdGlvbi50b3ApIC0gcmVjdC5oZWlnaHRcblxuICAgIGlmICh3aWR0aERpZmYgPCAwKSB7XG4gICAgICBvZmZzZXQubGVmdCArPSB3aWR0aERpZmZcbiAgICAgIG9mZnNldC5yaWdodCArPSB3aWR0aERpZmZcbiAgICB9XG4gICAgaWYgKGhlaWdodERpZmYgPCAwKSB7XG4gICAgICBvZmZzZXQudG9wICs9IGhlaWdodERpZmZcbiAgICAgIG9mZnNldC5ib3R0b20gKz0gaGVpZ2h0RGlmZlxuICAgIH1cblxuICAgIG9mZnNldC5sZWZ0ICs9IHN0YXJ0T2Zmc2V0LmxlZnQgLSAocmVjdC53aWR0aCAgKiBlbGVtZW50UmVjdC5sZWZ0KVxuICAgIG9mZnNldC50b3AgICs9IHN0YXJ0T2Zmc2V0LnRvcCAgLSAocmVjdC5oZWlnaHQgKiBlbGVtZW50UmVjdC50b3ApXG5cbiAgICBvZmZzZXQucmlnaHQgICs9IHN0YXJ0T2Zmc2V0LnJpZ2h0ICAtIChyZWN0LndpZHRoICAqICgxIC0gZWxlbWVudFJlY3QucmlnaHQpKVxuICAgIG9mZnNldC5ib3R0b20gKz0gc3RhcnRPZmZzZXQuYm90dG9tIC0gKHJlY3QuaGVpZ2h0ICogKDEgLSBlbGVtZW50UmVjdC5ib3R0b20pKVxuICB9XG5cbiAgc3RhdGUub2Zmc2V0ID0gb2Zmc2V0XG59XG5cbmZ1bmN0aW9uIHNldCAoeyBjb29yZHMsIGludGVyYWN0aW9uLCBzdGF0ZSB9KSB7XG4gIGNvbnN0IHsgb3B0aW9ucywgb2Zmc2V0IH0gPSBzdGF0ZVxuXG4gIGNvbnN0IHJlc3RyaWN0aW9uID0gZ2V0UmVzdHJpY3Rpb25SZWN0KG9wdGlvbnMucmVzdHJpY3Rpb24sIGludGVyYWN0aW9uLCBjb29yZHMpXG5cbiAgaWYgKCFyZXN0cmljdGlvbikgeyByZXR1cm4gfVxuXG4gIGNvbnN0IHJlY3QgPSByZWN0VXRpbHMueHl3aFRvVGxicihyZXN0cmljdGlvbilcblxuICBjb29yZHMueCA9IE1hdGgubWF4KE1hdGgubWluKHJlY3QucmlnaHQgIC0gb2Zmc2V0LnJpZ2h0LCBjb29yZHMueCksIHJlY3QubGVmdCArIG9mZnNldC5sZWZ0KVxuICBjb29yZHMueSA9IE1hdGgubWF4KE1hdGgubWluKHJlY3QuYm90dG9tIC0gb2Zmc2V0LmJvdHRvbSwgY29vcmRzLnkpLCByZWN0LnRvcCAgKyBvZmZzZXQudG9wKVxufVxuXG5mdW5jdGlvbiBnZXRSZXN0cmljdGlvblJlY3QgKHZhbHVlLCBpbnRlcmFjdGlvbiwgY29vcmRzPzogSW50ZXJhY3QuUG9pbnQpIHtcbiAgaWYgKGlzLmZ1bmModmFsdWUpKSB7XG4gICAgcmV0dXJuIHJlY3RVdGlscy5yZXNvbHZlUmVjdExpa2UodmFsdWUsIGludGVyYWN0aW9uLmludGVyYWN0YWJsZSwgaW50ZXJhY3Rpb24uZWxlbWVudCwgW2Nvb3Jkcy54LCBjb29yZHMueSwgaW50ZXJhY3Rpb25dKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiByZWN0VXRpbHMucmVzb2x2ZVJlY3RMaWtlKHZhbHVlLCBpbnRlcmFjdGlvbi5pbnRlcmFjdGFibGUsIGludGVyYWN0aW9uLmVsZW1lbnQpXG4gIH1cbn1cblxuY29uc3QgZGVmYXVsdHM6IEludGVyYWN0LlJlc3RyaWN0T3B0aW9ucyA9IHtcbiAgZW5hYmxlZDogZmFsc2UsXG4gIHJlc3RyaWN0aW9uOiBudWxsLFxuICBlbGVtZW50UmVjdDogbnVsbCxcbiAgb2Zmc2V0OiBudWxsLFxufVxuXG5jb25zdCByZXN0cmljdCA9IHtcbiAgc3RhcnQsXG4gIHNldCxcbiAgZ2V0UmVzdHJpY3Rpb25SZWN0LFxuICBkZWZhdWx0cyxcbn1cblxuZXhwb3J0IGRlZmF1bHQgcmVzdHJpY3RcbiJdfQ==