import test from '@interactjs/_dev/test/test';
import * as helpers from '@interactjs/core/tests/_helpers';
import pointerUtils from '@interactjs/utils/pointerUtils';
import * as actions from './index';
test('actions integration', t => {
    const scope = helpers.mockScope();
    const event = pointerUtils.coordsToEvent(pointerUtils.newCoords());
    const element = scope.document.body;
    scope.usePlugin(actions);
    const interactable = scope.interactables.new(element);
    // make a dropzone
    scope.interactables.new(scope.document.documentElement).dropzone({});
    const interaction1 = scope.interactions.new({});
    interaction1.pointerDown(event, event, element);
    for (const name of scope.actions.names) {
        interaction1.start({ name }, interactable, element);
        interaction1.stop();
        t.doesNotThrow(() => {
            t.notOk(interaction1.interacting(), `${name} interaction starts and stops as expected`);
        }, `${name} start and stop does not throw`);
    }
    for (const order of [scope.actions.names, [...scope.actions.names].reverse()]) {
        const interaction2 = scope.interactions.new({});
        for (const name of order) {
            t.doesNotThrow(() => {
                interaction2.start({ name }, interactable, element);
                interaction2.pointerMove(event, event, element);
                interaction2.pointerUp(event, event, element, element);
                t.notOk(interaction2.interacting(), `${name} interaction starts, moves and ends as expected`);
            }, `${name} sequence does not throw`);
        }
    }
    t.end();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9ucy5zcGVjLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYWN0aW9ucy5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sSUFBSSxNQUFNLDRCQUE0QixDQUFBO0FBQzdDLE9BQU8sS0FBSyxPQUFPLE1BQU0saUNBQWlDLENBQUE7QUFDMUQsT0FBTyxZQUFZLE1BQU0sZ0NBQWdDLENBQUE7QUFDekQsT0FBTyxLQUFLLE9BQU8sTUFBTSxTQUFTLENBQUE7QUFFbEMsSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUMsQ0FBQyxFQUFFO0lBQzlCLE1BQU0sS0FBSyxHQUFtQixPQUFPLENBQUMsU0FBUyxFQUFFLENBQUE7SUFDakQsTUFBTSxLQUFLLEdBQUcsWUFBWSxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQTtJQUNsRSxNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQTtJQUVuQyxLQUFLLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBRXhCLE1BQU0sWUFBWSxHQUFHLEtBQUssQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBQ3JELGtCQUFrQjtJQUNsQixLQUFLLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQTtJQUNwRSxNQUFNLFlBQVksR0FBRyxLQUFLLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQTtJQUUvQyxZQUFZLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUE7SUFFL0MsS0FBSyxNQUFNLElBQUksSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRTtRQUN0QyxZQUFZLENBQUMsS0FBSyxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUUsWUFBWSxFQUFFLE9BQU8sQ0FBQyxDQUFBO1FBQ25ELFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQTtRQUVuQixDQUFDLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRTtZQUNsQixDQUFDLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsRUFBRSxHQUFHLElBQUksMkNBQTJDLENBQUMsQ0FBQTtRQUN6RixDQUFDLEVBQUUsR0FBRyxJQUFJLGdDQUFnQyxDQUFDLENBQUE7S0FDNUM7SUFFRCxLQUFLLE1BQU0sS0FBSyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRTtRQUM3RSxNQUFNLFlBQVksR0FBRyxLQUFLLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUUvQyxLQUFLLE1BQU0sSUFBSSxJQUFJLEtBQUssRUFBRTtZQUN4QixDQUFDLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRTtnQkFDbEIsWUFBWSxDQUFDLEtBQUssQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FBQTtnQkFDbkQsWUFBWSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFBO2dCQUMvQyxZQUFZLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFBO2dCQUV0RCxDQUFDLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsRUFBRSxHQUFHLElBQUksaURBQWlELENBQUMsQ0FBQTtZQUMvRixDQUFDLEVBQUUsR0FBRyxJQUFJLDBCQUEwQixDQUFDLENBQUE7U0FDdEM7S0FDRjtJQUVELENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQTtBQUNULENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHRlc3QgZnJvbSAnQGludGVyYWN0anMvX2Rldi90ZXN0L3Rlc3QnXG5pbXBvcnQgKiBhcyBoZWxwZXJzIGZyb20gJ0BpbnRlcmFjdGpzL2NvcmUvdGVzdHMvX2hlbHBlcnMnXG5pbXBvcnQgcG9pbnRlclV0aWxzIGZyb20gJ0BpbnRlcmFjdGpzL3V0aWxzL3BvaW50ZXJVdGlscydcbmltcG9ydCAqIGFzIGFjdGlvbnMgZnJvbSAnLi9pbmRleCdcblxudGVzdCgnYWN0aW9ucyBpbnRlZ3JhdGlvbicsIHQgPT4ge1xuICBjb25zdCBzY29wZTogSW50ZXJhY3QuU2NvcGUgPSBoZWxwZXJzLm1vY2tTY29wZSgpXG4gIGNvbnN0IGV2ZW50ID0gcG9pbnRlclV0aWxzLmNvb3Jkc1RvRXZlbnQocG9pbnRlclV0aWxzLm5ld0Nvb3JkcygpKVxuICBjb25zdCBlbGVtZW50ID0gc2NvcGUuZG9jdW1lbnQuYm9keVxuXG4gIHNjb3BlLnVzZVBsdWdpbihhY3Rpb25zKVxuXG4gIGNvbnN0IGludGVyYWN0YWJsZSA9IHNjb3BlLmludGVyYWN0YWJsZXMubmV3KGVsZW1lbnQpXG4gIC8vIG1ha2UgYSBkcm9wem9uZVxuICBzY29wZS5pbnRlcmFjdGFibGVzLm5ldyhzY29wZS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmRyb3B6b25lKHt9KVxuICBjb25zdCBpbnRlcmFjdGlvbjEgPSBzY29wZS5pbnRlcmFjdGlvbnMubmV3KHt9KVxuXG4gIGludGVyYWN0aW9uMS5wb2ludGVyRG93bihldmVudCwgZXZlbnQsIGVsZW1lbnQpXG5cbiAgZm9yIChjb25zdCBuYW1lIG9mIHNjb3BlLmFjdGlvbnMubmFtZXMpIHtcbiAgICBpbnRlcmFjdGlvbjEuc3RhcnQoeyBuYW1lIH0sIGludGVyYWN0YWJsZSwgZWxlbWVudClcbiAgICBpbnRlcmFjdGlvbjEuc3RvcCgpXG5cbiAgICB0LmRvZXNOb3RUaHJvdygoKSA9PiB7XG4gICAgICB0Lm5vdE9rKGludGVyYWN0aW9uMS5pbnRlcmFjdGluZygpLCBgJHtuYW1lfSBpbnRlcmFjdGlvbiBzdGFydHMgYW5kIHN0b3BzIGFzIGV4cGVjdGVkYClcbiAgICB9LCBgJHtuYW1lfSBzdGFydCBhbmQgc3RvcCBkb2VzIG5vdCB0aHJvd2ApXG4gIH1cblxuICBmb3IgKGNvbnN0IG9yZGVyIG9mIFtzY29wZS5hY3Rpb25zLm5hbWVzLCBbLi4uc2NvcGUuYWN0aW9ucy5uYW1lc10ucmV2ZXJzZSgpXSkge1xuICAgIGNvbnN0IGludGVyYWN0aW9uMiA9IHNjb3BlLmludGVyYWN0aW9ucy5uZXcoe30pXG5cbiAgICBmb3IgKGNvbnN0IG5hbWUgb2Ygb3JkZXIpIHtcbiAgICAgIHQuZG9lc05vdFRocm93KCgpID0+IHtcbiAgICAgICAgaW50ZXJhY3Rpb24yLnN0YXJ0KHsgbmFtZSB9LCBpbnRlcmFjdGFibGUsIGVsZW1lbnQpXG4gICAgICAgIGludGVyYWN0aW9uMi5wb2ludGVyTW92ZShldmVudCwgZXZlbnQsIGVsZW1lbnQpXG4gICAgICAgIGludGVyYWN0aW9uMi5wb2ludGVyVXAoZXZlbnQsIGV2ZW50LCBlbGVtZW50LCBlbGVtZW50KVxuXG4gICAgICAgIHQubm90T2soaW50ZXJhY3Rpb24yLmludGVyYWN0aW5nKCksIGAke25hbWV9IGludGVyYWN0aW9uIHN0YXJ0cywgbW92ZXMgYW5kIGVuZHMgYXMgZXhwZWN0ZWRgKVxuICAgICAgfSwgYCR7bmFtZX0gc2VxdWVuY2UgZG9lcyBub3QgdGhyb3dgKVxuICAgIH1cbiAgfVxuXG4gIHQuZW5kKClcbn0pXG4iXX0=