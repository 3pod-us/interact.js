import t from"./Modification.min.js";export function makeModifier(t,i){const{defaults:o}=t,n={start:t.start,set:t.set,beforeEnd:t.beforeEnd,stop:t.stop},e=t=>{const e=t||{};e.enabled=!1!==e.enabled;for(const t in o)t in e||(e[t]=o[t]);return{options:e,methods:n,name:i}};return i&&"string"==typeof i&&(e._defaults=o,e._methods=n),e}export function addEventModifiers({iEvent:t,interaction:{modification:{result:i}}}){i&&(t.modifiers=i.eventProps)}const i={id:"modifiers/base",install:t=>{t.defaults.perAction.modifiers=[]},listeners:{"interactions:new":({interaction:i})=>{i.modification=new t(i)},"interactions:before-action-start":t=>{const{modification:i}=t.interaction;i.start(t,t.interaction.coords.start.page),t.interaction.edges=i.edges,i.applyToInteraction(t)},"interactions:before-action-move":t=>t.interaction.modification.setAndApply(t),"interactions:before-action-end":t=>t.interaction.modification.beforeEnd(t),"interactions:action-start":addEventModifiers,"interactions:action-move":addEventModifiers,"interactions:action-end":addEventModifiers,"interactions:after-action-start":t=>t.interaction.modification.restoreInteractionCoords(t),"interactions:after-action-move":t=>t.interaction.modification.restoreInteractionCoords(t),"interactions:stop":t=>t.interaction.modification.stop(t)},before:["actions","action/drag","actions/resize","actions/gesture"]};export default i;
//# sourceMappingURL=base.min.js.map