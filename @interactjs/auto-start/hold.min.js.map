{
	"version": 3,
	"sources": [
		"hold.ts"
	],
	"names": [
		"basePlugin",
		"getHoldDuration",
		"interaction",
		"actionName",
		"prepared",
		"name",
		"options",
		"interactable",
		"hold",
		"delay",
		"id",
		"install",
		"scope",
		"defaults",
		"usePlugin",
		"perAction",
		"listeners",
		"interactions:new",
		"autoStartHoldTimer",
		"autoStart:prepared",
		"setTimeout",
		"start",
		"element",
		"interactions:move",
		"duplicate",
		"pointerWasMoved",
		"clearTimeout",
		"autoStart:before-start"
	],
	"mappings": "OAAOA,MAAgB,cA0BvB,SAASC,EAAiBC,GACxB,MAAMC,EAAaD,EAAYE,UAAYF,EAAYE,SAASC,KAEhE,IAAKF,EAAc,OAAO,KAE1B,MAAMG,EAAUJ,EAAYK,aAAaD,QAEzC,OAAOA,EAAQH,GAAYK,MAAQF,EAAQH,GAAYM,oBAG1C,CACbC,GAAI,kBACJC,QAvBF,SAAkBC,GAChB,MAAMC,SACJA,GACED,EAEJA,EAAME,UAAUd,GAEhBa,EAASE,UAAUP,KAAO,EAC1BK,EAASE,UAAUN,MAAQ,GAgB3BO,UAAW,CACTC,mBAAoB,EAAGf,YAAAA,MACrBA,EAAYgB,mBAAqB,MAGnCC,qBAAsB,EAAGjB,YAAAA,MACvB,MAAMM,EAAOP,EAAgBC,GAEzBM,EAAO,IACTN,EAAYgB,mBAAqBE,WAAW,KAC1ClB,EAAYmB,MAAMnB,EAAYE,SAAUF,EAAYK,aAAcL,EAAYoB,UAC7Ed,KAIPe,oBAAqB,EAAGrB,YAAAA,EAAasB,UAAAA,MAC/BtB,EAAYuB,kBAAoBD,GAClCE,aAAaxB,EAAYgB,qBAK7BS,yBAA0B,EAAGzB,YAAAA,MACdD,EAAgBC,GAElB,IACTA,EAAYE,SAASC,KAAO,QAIlCJ,gBAAAA",
	"sourcesContent": [
		"import basePlugin from './base'\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    defaults,\n  } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n}\n\nfunction getHoldDuration (interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) { return null }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nexport default {\n  id: 'auto-start/hold',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoStartHoldTimer = null\n    },\n\n    'autoStart:prepared': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.autoStartHoldTimer = setTimeout(() => {\n          interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n        }, hold)\n      }\n    },\n\n    'interactions:move': ({ interaction, duplicate }) => {\n      if (interaction.pointerWasMoved && !duplicate) {\n        clearTimeout(interaction.autoStartHoldTimer)\n      }\n    },\n\n    // prevent regular down->move autoStart\n    'autoStart:before-start': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.prepared.name = null\n      }\n    },\n  },\n  getHoldDuration,\n}\n"
	]
}