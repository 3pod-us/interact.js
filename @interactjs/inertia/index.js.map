{
	"version": 3,
	"sources": [
		"index.ts"
	],
	"names": [
		"modifiers",
		"Modification",
		"offset",
		"dom",
		"hypot",
		"is",
		"copyCoords",
		"raf",
		"install",
		"scope",
		"defaults",
		"usePlugin",
		"default",
		"actions",
		"phases",
		"inertiastart",
		"resume",
		"perAction",
		"inertia",
		"enabled",
		"resistance",
		"minSpeed",
		"endSpeed",
		"allowResume",
		"smoothEndDuration",
		"InertiaState",
		"constructor",
		"interaction",
		"start",
		"event",
		"options",
		"getOptions",
		"client",
		"velocityClient",
		"coords",
		"velocity",
		"pointerSpeed",
		"x",
		"y",
		"modification",
		"copyFrom",
		"t0",
		"_now",
		"v0",
		"currentOffset",
		"startCoords",
		"cur",
		"page",
		"modifierArg",
		"interactable",
		"element",
		"rect",
		"edges",
		"pageCoords",
		"preEnd",
		"phase",
		"thrown",
		"timeStamp",
		"startInertia",
		"result",
		"setAll",
		"changed",
		"startSmoothEnd",
		"offsetBy",
		"targetOffset",
		"_doPhase",
		"active",
		"simulation",
		"startVelocity",
		"lambda",
		"inertiaDur",
		"Math",
		"log",
		"te",
		"lambda_v0",
		"one_ve_v0",
		"isModified",
		"modifiedOffset",
		"delta",
		"timeout",
		"request",
		"inertiaTick",
		"smoothEnd",
		"smoothEndTick",
		"t",
		"progress",
		"exp",
		"newOffset",
		"getQuadraticCurvePoint",
		"move",
		"end",
		"duration",
		"easeOutQuad",
		"skipModifiers",
		"modifierCount",
		"pointer",
		"eventTarget",
		"updatePointer",
		"prev",
		"stop",
		"cancel",
		"_interacting",
		"started",
		"arg",
		"state",
		"parentNode",
		"prepared",
		"name",
		"id",
		"before",
		"listeners",
		"applyToInteraction",
		"setAndApply",
		"addEventModifiers",
		"restoreInteractionCoords",
		"_getQBezierValue",
		"p1",
		"p2",
		"p3",
		"iT",
		"startX",
		"startY",
		"cpX",
		"cpY",
		"endX",
		"endY",
		"position",
		"b",
		"c",
		"d"
	],
	"mappings": ";;AAAA,OAAO,KAAKA,SAAZ;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;AACA,OAAO,KAAKC,GAAZ;AACA,OAAOC,KAAP;AACA,OAAO,KAAKC,EAAZ;AACA,SAASC,UAAT;AACA,OAAOC,GAAP;;AAwCA,SAASC,OAAT,CAAkBC,KAAlB,EAAyC;AACvC,QAAM;AACJC,IAAAA;AADI,MAEFD,KAFJ;AAIAA,EAAAA,KAAK,CAACE,SAAN,CAAgBT,MAAhB;AACAO,EAAAA,KAAK,CAACE,SAAN,CAAgBX,SAAS,CAACY,OAA1B;AACAH,EAAAA,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAqBC,YAArB,GAAoC,IAApC;AACAN,EAAAA,KAAK,CAACI,OAAN,CAAcC,MAAd,CAAqBE,MAArB,GAA8B,IAA9B;AAEAN,EAAAA,QAAQ,CAACO,SAAT,CAAmBC,OAAnB,GAA6B;AAC3BC,IAAAA,OAAO,EAAY,KADQ;AAE3BC,IAAAA,UAAU,EAAS,EAFQ;AAED;AAC1BC,IAAAA,QAAQ,EAAW,GAHQ;AAGD;AAC1BC,IAAAA,QAAQ,EAAW,EAJQ;AAID;AAC1BC,IAAAA,WAAW,EAAQ,IALQ;AAKD;AAC1BC,IAAAA,iBAAiB,EAAE,GANQ,CAMD;;AANC,GAA7B;AAQD;;AAED,OAAO,MAAMC,YAAN,CAAmB;AAmBT;AACA;AAGfC,EAAAA,WAAW,CACQC,WADR,EAET;AAAA,SADiBA,WACjB,GADiBA,WACjB;;AAAA,oCAxBO,KAwBP;;AAAA,wCAvBW,KAuBX;;AAAA,uCAtBU,KAsBV;;AAAA,yCArBY,KAqBZ;;AAAA,0CAnB2B,IAmB3B;;AAAA,2CAlBc,CAkBd;;AAAA,yCAjBmC,IAiBnC;;AAAA,yCAf4B,IAe5B;;AAAA,gCAdG,CAcH;;AAAA,gCAbG,CAaH;;AAAA,gCAXG,CAWH;;AAAA,0CAV6B,IAU7B;;AAAA,4CAT+B,IAS/B;;AAAA,2CAR8B,IAQ9B;;AAAA,uCANW,CAMX;;AAAA,uCALW,CAKX;;AAAA,qCAJgB,IAIhB;AAAE;;AAEJC,EAAAA,KAAK,CAAEC,KAAF,EAAoC;AACvC,UAAM;AAAEF,MAAAA;AAAF,QAAkB,IAAxB;AACA,UAAMG,OAAO,GAAGC,UAAU,CAACJ,WAAD,CAA1B;;AAEA,QAAI,CAACG,OAAD,IAAY,CAACA,OAAO,CAACX,OAAzB,EAAkC;AAChC,aAAO,KAAP;AACD;;AAED,UAAM;AAAEa,MAAAA,MAAM,EAAEC;AAAV,QAA6BN,WAAW,CAACO,MAAZ,CAAmBC,QAAtD;AACA,UAAMC,YAAY,GAAGhC,KAAK,CAAC6B,cAAc,CAACI,CAAhB,EAAmBJ,cAAc,CAACK,CAAlC,CAA1B;AACA,UAAMC,YAAY,GAAG,KAAKA,YAAL,KAAsB,KAAKA,YAAL,GAAoB,IAAItC,YAAJ,CAAiB0B,WAAjB,CAA1C,CAArB;AAEAY,IAAAA,YAAY,CAACC,QAAb,CAAsBb,WAAW,CAACY,YAAlC;AAEA,SAAKE,EAAL,GAAUd,WAAW,CAACe,IAAZ,EAAV;AACA,SAAKnB,WAAL,GAAmBO,OAAO,CAACP,WAA3B;AACA,SAAKoB,EAAL,GAAUP,YAAV;AACA,SAAKQ,aAAL,GAAqB;AAAEP,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAArB;AACA,SAAKO,WAAL,GAAmBlB,WAAW,CAACO,MAAZ,CAAmBY,GAAnB,CAAuBC,IAA1C;AAEA,SAAKC,WAAL,GAAmB;AACjBrB,MAAAA,WADiB;AAEjBsB,MAAAA,YAAY,EAAEtB,WAAW,CAACsB,YAFT;AAGjBC,MAAAA,OAAO,EAAEvB,WAAW,CAACuB,OAHJ;AAIjBC,MAAAA,IAAI,EAAExB,WAAW,CAACwB,IAJD;AAKjBC,MAAAA,KAAK,EAAEzB,WAAW,CAACyB,KALF;AAMjBC,MAAAA,UAAU,EAAE,KAAKR,WANA;AAOjBS,MAAAA,MAAM,EAAE,IAPS;AAQjBC,MAAAA,KAAK,EAAE;AARU,KAAnB;AAWA,UAAMC,MAAM,GACT,KAAKf,EAAL,GAAUd,WAAW,CAACO,MAAZ,CAAmBY,GAAnB,CAAuBW,SAAlC,GAA+C,EAA/C,IACArB,YAAY,GAAGN,OAAO,CAACT,QADvB,IAEAe,YAAY,GAAGN,OAAO,CAACR,QAHzB;;AAMA,QAAIkC,MAAJ,EAAY;AACV,WAAKE,YAAL;AACD,KAFD,MAEO;AACLnB,MAAAA,YAAY,CAACoB,MAAb,GAAsBpB,YAAY,CAACqB,MAAb,CAAoB,KAAKZ,WAAzB,CAAtB;;AAEA,UAAI,CAACT,YAAY,CAACoB,MAAb,CAAoBE,OAAzB,EAAkC;AAChC,eAAO,KAAP;AACD;;AAED,WAAKC,cAAL;AACD,KA/CsC,CAiDvC;;;AACAnC,IAAAA,WAAW,CAACY,YAAZ,CAAyBoB,MAAzB,CAAgCR,IAAhC,GAAuC,IAAvC,CAlDuC,CAoDvC;;AACAxB,IAAAA,WAAW,CAACoC,QAAZ,CAAqB,KAAKC,YAA1B;;AACArC,IAAAA,WAAW,CAACsC,QAAZ,CAAqB;AACnBtC,MAAAA,WADmB;AAEnBE,MAAAA,KAFmB;AAGnB0B,MAAAA,KAAK,EAAE;AAHY,KAArB;;AAKA5B,IAAAA,WAAW,CAACoC,QAAZ,CAAqB;AAAE1B,MAAAA,CAAC,EAAE,CAAC,KAAK2B,YAAL,CAAkB3B,CAAxB;AAA2BC,MAAAA,CAAC,EAAE,CAAC,KAAK0B,YAAL,CAAkB1B;AAAjD,KAArB,EA3DuC,CA4DvC;;AACAX,IAAAA,WAAW,CAACY,YAAZ,CAAyBoB,MAAzB,CAAgCR,IAAhC,GAAuC,IAAvC;AAEA,SAAKe,MAAL,GAAc,IAAd;AACAvC,IAAAA,WAAW,CAACwC,UAAZ,GAAyB,IAAzB;AAEA,WAAO,IAAP;AACD;;AAEDT,EAAAA,YAAY,GAAI;AACd,UAAMU,aAAa,GAAG,KAAKzC,WAAL,CAAiBO,MAAjB,CAAwBC,QAAxB,CAAiCH,MAAvD;AACA,UAAMF,OAAO,GAAGC,UAAU,CAAC,KAAKJ,WAAN,CAA1B;AACA,UAAM0C,MAAM,GAAGvC,OAAO,CAACV,UAAvB;AACA,UAAMkD,UAAU,GAAG,CAACC,IAAI,CAACC,GAAL,CAAS1C,OAAO,CAACR,QAAR,GAAmB,KAAKqB,EAAjC,CAAD,GAAwC0B,MAA3D;AAEA,SAAKL,YAAL,GAAoB;AAClB3B,MAAAA,CAAC,EAAE,CAAC+B,aAAa,CAAC/B,CAAd,GAAkBiC,UAAnB,IAAiCD,MADlB;AAElB/B,MAAAA,CAAC,EAAE,CAAC8B,aAAa,CAAC9B,CAAd,GAAkBgC,UAAnB,IAAiCD;AAFlB,KAApB;AAKA,SAAKI,EAAL,GAAUH,UAAV;AACA,SAAKI,SAAL,GAAiBL,MAAM,GAAG,KAAK1B,EAA/B;AACA,SAAKgC,SAAL,GAAiB,IAAI7C,OAAO,CAACR,QAAR,GAAmB,KAAKqB,EAA7C;AAEA,UAAM;AAAEJ,MAAAA,YAAF;AAAgBS,MAAAA;AAAhB,QAAgC,IAAtC;AAEAA,IAAAA,WAAW,CAACK,UAAZ,GAAyB;AACvBhB,MAAAA,CAAC,EAAE,KAAKQ,WAAL,CAAiBR,CAAjB,GAAqB,KAAK2B,YAAL,CAAkB3B,CADnB;AAEvBC,MAAAA,CAAC,EAAE,KAAKO,WAAL,CAAiBP,CAAjB,GAAqB,KAAK0B,YAAL,CAAkB1B;AAFnB,KAAzB;AAKAC,IAAAA,YAAY,CAACoB,MAAb,GAAsBpB,YAAY,CAACqB,MAAb,CAAoBZ,WAApB,CAAtB;;AAEA,QAAIT,YAAY,CAACoB,MAAb,CAAoBE,OAAxB,EAAiC;AAC/B,WAAKe,UAAL,GAAkB,IAAlB;AACA,WAAKC,cAAL,GAAsB;AACpBxC,QAAAA,CAAC,EAAE,KAAK2B,YAAL,CAAkB3B,CAAlB,GAAsBE,YAAY,CAACoB,MAAb,CAAoBmB,KAApB,CAA0BzC,CAD/B;AAEpBC,QAAAA,CAAC,EAAE,KAAK0B,YAAL,CAAkB1B,CAAlB,GAAsBC,YAAY,CAACoB,MAAb,CAAoBmB,KAApB,CAA0BxC;AAF/B,OAAtB;AAID;;AAED,SAAKyC,OAAL,GAAexE,GAAG,CAACyE,OAAJ,CAAY,MAAM,KAAKC,WAAL,EAAlB,CAAf;AACD;;AAEDnB,EAAAA,cAAc,GAAI;AAChB,SAAKoB,SAAL,GAAiB,IAAjB;AACA,SAAKN,UAAL,GAAkB,IAAlB;AACA,SAAKZ,YAAL,GAAoB;AAClB3B,MAAAA,CAAC,EAAE,KAAKE,YAAL,CAAkBoB,MAAlB,CAAyBmB,KAAzB,CAA+BzC,CADhB;AAElBC,MAAAA,CAAC,EAAE,KAAKC,YAAL,CAAkBoB,MAAlB,CAAyBmB,KAAzB,CAA+BxC;AAFhB,KAApB;AAKA,SAAKyC,OAAL,GAAexE,GAAG,CAACyE,OAAJ,CAAY,MAAM,KAAKG,aAAL,EAAlB,CAAf;AACD;;AAEDF,EAAAA,WAAW,GAAI;AACb,UAAM;AAAEtD,MAAAA;AAAF,QAAkB,IAAxB;AACA,UAAMG,OAAO,GAAGC,UAAU,CAACJ,WAAD,CAA1B;AACA,UAAM0C,MAAM,GAAGvC,OAAO,CAACV,UAAvB;AACA,UAAMgE,CAAC,GAAG,CAACzD,WAAW,CAACe,IAAZ,KAAqB,KAAKD,EAA3B,IAAiC,IAA3C;;AAEA,QAAI2C,CAAC,GAAG,KAAKX,EAAb,EAAiB;AACf,YAAMY,QAAQ,GAAI,IAAI,CAACd,IAAI,CAACe,GAAL,CAAS,CAACjB,MAAD,GAAUe,CAAnB,IAAwB,KAAKV,SAA9B,IAA2C,KAAKC,SAAtE;AACA,UAAIY,SAAJ;;AAEA,UAAI,KAAKX,UAAT,EAAqB;AACnBW,QAAAA,SAAS,GAAGC,sBAAsB,CAChC,CADgC,EAC7B,CAD6B,EAEhC,KAAKxB,YAAL,CAAkB3B,CAFc,EAEX,KAAK2B,YAAL,CAAkB1B,CAFP,EAGhC,KAAKuC,cAAL,CAAoBxC,CAHY,EAGT,KAAKwC,cAAL,CAAoBvC,CAHX,EAIhC+C,QAJgC,CAAlC;AAMD,OAPD,MAQK;AACHE,QAAAA,SAAS,GAAG;AACVlD,UAAAA,CAAC,EAAE,KAAK2B,YAAL,CAAkB3B,CAAlB,GAAsBgD,QADf;AAEV/C,UAAAA,CAAC,EAAE,KAAK0B,YAAL,CAAkB1B,CAAlB,GAAsB+C;AAFf,SAAZ;AAID;;AAED,YAAMP,KAAK,GAAG;AAAEzC,QAAAA,CAAC,EAAEkD,SAAS,CAAClD,CAAV,GAAc,KAAKO,aAAL,CAAmBP,CAAtC;AAAyCC,QAAAA,CAAC,EAAEiD,SAAS,CAACjD,CAAV,GAAc,KAAKM,aAAL,CAAmBN;AAA7E,OAAd;AAEA,WAAKM,aAAL,CAAmBP,CAAnB,IAAwByC,KAAK,CAACzC,CAA9B;AACA,WAAKO,aAAL,CAAmBN,CAAnB,IAAwBwC,KAAK,CAACxC,CAA9B;AAEAX,MAAAA,WAAW,CAACoC,QAAZ,CAAqBe,KAArB;AACAnD,MAAAA,WAAW,CAAC8D,IAAZ;AAEA,WAAKV,OAAL,GAAexE,GAAG,CAACyE,OAAJ,CAAY,MAAM,KAAKC,WAAL,EAAlB,CAAf;AACD,KA5BD,MA6BK;AACHtD,MAAAA,WAAW,CAACoC,QAAZ,CAAqB;AACnB1B,QAAAA,CAAC,EAAE,KAAKwC,cAAL,CAAoBxC,CAApB,GAAwB,KAAKO,aAAL,CAAmBP,CAD3B;AAEnBC,QAAAA,CAAC,EAAE,KAAKuC,cAAL,CAAoBvC,CAApB,GAAwB,KAAKM,aAAL,CAAmBN;AAF3B,OAArB;AAKA,WAAKoD,GAAL;AACD;AACF;;AAEDP,EAAAA,aAAa,GAAI;AACf,UAAM;AAAExD,MAAAA;AAAF,QAAkB,IAAxB;AACA,UAAMyD,CAAC,GAAGzD,WAAW,CAACe,IAAZ,KAAqB,KAAKD,EAApC;AACA,UAAM;AAAEjB,MAAAA,iBAAiB,EAAEmE;AAArB,QAAkC5D,UAAU,CAACJ,WAAD,CAAlD;;AAEA,QAAIyD,CAAC,GAAGO,QAAR,EAAkB;AAChB,YAAMJ,SAAS,GAAG;AAChBlD,QAAAA,CAAC,EAAEuD,WAAW,CAACR,CAAD,EAAI,CAAJ,EAAO,KAAKpB,YAAL,CAAkB3B,CAAzB,EAA4BsD,QAA5B,CADE;AAEhBrD,QAAAA,CAAC,EAAEsD,WAAW,CAACR,CAAD,EAAI,CAAJ,EAAO,KAAKpB,YAAL,CAAkB1B,CAAzB,EAA4BqD,QAA5B;AAFE,OAAlB;AAIA,YAAMb,KAAK,GAAG;AACZzC,QAAAA,CAAC,EAAEkD,SAAS,CAAClD,CAAV,GAAc,KAAKO,aAAL,CAAmBP,CADxB;AAEZC,QAAAA,CAAC,EAAEiD,SAAS,CAACjD,CAAV,GAAc,KAAKM,aAAL,CAAmBN;AAFxB,OAAd;AAKA,WAAKM,aAAL,CAAmBP,CAAnB,IAAwByC,KAAK,CAACzC,CAA9B;AACA,WAAKO,aAAL,CAAmBN,CAAnB,IAAwBwC,KAAK,CAACxC,CAA9B;AAEAX,MAAAA,WAAW,CAACoC,QAAZ,CAAqBe,KAArB;AACAnD,MAAAA,WAAW,CAAC8D,IAAZ,CAAiB;AAAEI,QAAAA,aAAa,EAAE,KAAKC;AAAtB,OAAjB;AAEA,WAAKf,OAAL,GAAexE,GAAG,CAACyE,OAAJ,CAAY,MAAM,KAAKG,aAAL,EAAlB,CAAf;AACD,KAjBD,MAkBK;AACHxD,MAAAA,WAAW,CAACoC,QAAZ,CAAqB;AACnB1B,QAAAA,CAAC,EAAE,KAAK2B,YAAL,CAAkB3B,CAAlB,GAAsB,KAAKO,aAAL,CAAmBP,CADzB;AAEnBC,QAAAA,CAAC,EAAE,KAAK0B,YAAL,CAAkB1B,CAAlB,GAAsB,KAAKM,aAAL,CAAmBN;AAFzB,OAArB;AAKA,WAAKoD,GAAL;AACD;AACF;;AAED1E,EAAAA,MAAM,CAAE;AAAE+E,IAAAA,OAAF;AAAWlE,IAAAA,KAAX;AAAkBmE,IAAAA;AAAlB,GAAF,EAA6E;AACjF,UAAM;AAAErE,MAAAA;AAAF,QAAkB,IAAxB,CADiF,CAGjF;;AACAA,IAAAA,WAAW,CAACoC,QAAZ,CAAqB;AACnB1B,MAAAA,CAAC,EAAE,CAAC,KAAKO,aAAL,CAAmBP,CADJ;AAEnBC,MAAAA,CAAC,EAAE,CAAC,KAAKM,aAAL,CAAmBN;AAFJ,KAArB,EAJiF,CASjF;;AACAX,IAAAA,WAAW,CAACsE,aAAZ,CAA0BF,OAA1B,EAAmClE,KAAnC,EAA0CmE,WAA1C,EAAuD,IAAvD,EAViF,CAYjF;;AACArE,IAAAA,WAAW,CAACsC,QAAZ,CAAqB;AACnBtC,MAAAA,WADmB;AAEnBE,MAAAA,KAFmB;AAGnB0B,MAAAA,KAAK,EAAE;AAHY,KAArB;;AAKAjD,IAAAA,UAAU,CAACqB,WAAW,CAACO,MAAZ,CAAmBgE,IAApB,EAA0BvE,WAAW,CAACO,MAAZ,CAAmBY,GAA7C,CAAV;AAEA,SAAKqD,IAAL;AACD;;AAEDT,EAAAA,GAAG,GAAI;AACL,SAAK/D,WAAL,CAAiB8D,IAAjB;AACA,SAAK9D,WAAL,CAAiB+D,GAAjB;AACA,SAAKS,IAAL;AACD;;AAEDA,EAAAA,IAAI,GAAI;AACN,SAAKjC,MAAL,GAAc,KAAKgB,SAAL,GAAiB,KAA/B;AACA,SAAKvD,WAAL,CAAiBwC,UAAjB,GAA8B,IAA9B;AACA5D,IAAAA,GAAG,CAAC6F,MAAJ,CAAW,KAAKrB,OAAhB;AACD;;AA7PuB;;AAgQ1B,SAASnD,KAAT,CAAgB;AAAED,EAAAA,WAAF;AAAeE,EAAAA;AAAf,CAAhB,EAAyF;AACvF,MAAI,CAACF,WAAW,CAAC0E,YAAb,IAA6B1E,WAAW,CAACwC,UAA7C,EAAyD;AACvD,WAAO,IAAP;AACD;;AAED,QAAMmC,OAAO,GAAG3E,WAAW,CAACT,OAAZ,CAAoBU,KAApB,CAA0BC,KAA1B,CAAhB,CALuF,CAOvF;;AACA,SAAOyE,OAAO,GAAG,KAAH,GAAW,IAAzB;AACD,C,CAED;AACA;;;AACA,SAAStF,MAAT,CAAiBuF,GAAjB,EAAgE;AAC9D,QAAM;AAAE5E,IAAAA,WAAF;AAAeqE,IAAAA;AAAf,MAA+BO,GAArC;AACA,QAAMC,KAAK,GAAG7E,WAAW,CAACT,OAA1B;;AAEA,MAAI,CAACsF,KAAK,CAACtC,MAAX,EAAmB;AAAE;AAAQ;;AAE7B,MAAIhB,OAAO,GAAG8C,WAAd,CAN8D,CAQ9D;;AACA,SAAO3F,EAAE,CAAC6C,OAAH,CAAWA,OAAX,CAAP,EAA4B;AAC1B;AACA,QAAIA,OAAO,KAAKvB,WAAW,CAACuB,OAA5B,EAAqC;AACnCsD,MAAAA,KAAK,CAACxF,MAAN,CAAauF,GAAb;AACA;AACD;;AAEDrD,IAAAA,OAAO,GAAG/C,GAAG,CAACsG,UAAJ,CAAevD,OAAf,CAAV;AACD;AACF;;AAED,SAASiD,IAAT,CAAe;AAAExE,EAAAA;AAAF,CAAf,EAAuE;AACrE,QAAM6E,KAAK,GAAG7E,WAAW,CAACT,OAA1B;;AAEA,MAAIsF,KAAK,CAACtC,MAAV,EAAkB;AAChBsC,IAAAA,KAAK,CAACL,IAAN;AACD;AACF;;AAED,SAASpE,UAAT,CAAqB;AAAEkB,EAAAA,YAAF;AAAgByD,EAAAA;AAAhB,CAArB,EAAuE;AACrE,SAAOzD,YAAY,IACjBA,YAAY,CAACnB,OADR,IAEL4E,QAAQ,CAACC,IAFJ,IAGL1D,YAAY,CAACnB,OAAb,CAAqB4E,QAAQ,CAACC,IAA9B,EAAoCzF,OAHtC;AAID;;AAED,MAAMA,OAAwB,GAAG;AAC/B0F,EAAAA,EAAE,EAAE,SAD2B;AAE/BC,EAAAA,MAAM,EAAE,CAAC,gBAAD,CAFuB;AAG/BrG,EAAAA,OAH+B;AAI/BsG,EAAAA,SAAS,EAAE;AACT,wBAAoB,CAAC;AAAEnF,MAAAA;AAAF,KAAD,KAAqB;AACvCA,MAAAA,WAAW,CAACT,OAAZ,GAAsB,IAAIO,YAAJ,CAAiBE,WAAjB,CAAtB;AACD,KAHQ;AAKT,sCAAkCC,KALzB;AAMT,yBAAqBZ,MANZ;AAOT,yBAAqBmF,IAPZ;AAST,yCAAqCI,GAAG,IAAI;AAC1C,YAAM;AAAEhE,QAAAA;AAAF,UAAmBgE,GAAG,CAAC5E,WAA7B;AAEAY,MAAAA,YAAY,CAAC4D,IAAb,CAAkBI,GAAlB;AACAhE,MAAAA,YAAY,CAACX,KAAb,CAAmB2E,GAAnB,EAAwBA,GAAG,CAAC5E,WAAJ,CAAgBO,MAAhB,CAAuBY,GAAvB,CAA2BC,IAAnD;AACAR,MAAAA,YAAY,CAACwE,kBAAb,CAAgCR,GAAhC;AACD,KAfQ;AAiBT,+CAA2CA,GAAG,IAAIA,GAAG,CAAC5E,WAAJ,CAAgBY,YAAhB,CAA6ByE,WAA7B,CAAyCT,GAAzC,CAjBzC;AAkBT,kCAA8BvG,SAAS,CAACiH,iBAlB/B;AAmBT,wCAAoCjH,SAAS,CAACiH,iBAnBrC;AAoBT,8CAA0CV,GAAG,IAAIA,GAAG,CAAC5E,WAAJ,CAAgBY,YAAhB,CAA6B2E,wBAA7B,CAAsDX,GAAtD,CApBxC;AAqBT,wCAAoCA,GAAG,IAAIA,GAAG,CAAC5E,WAAJ,CAAgBY,YAAhB,CAA6B2E,wBAA7B,CAAsDX,GAAtD;AArBlC;AAJoB,CAAjC,C,CA6BA;;AACA,SAASY,gBAAT,CAA2B/B,CAA3B,EAAsCgC,EAAtC,EAAkDC,EAAlD,EAA8DC,EAA9D,EAA0E;AACxE,QAAMC,EAAE,GAAG,IAAInC,CAAf;AACA,SAAOmC,EAAE,GAAGA,EAAL,GAAUH,EAAV,GAAe,IAAIG,EAAJ,GAASnC,CAAT,GAAaiC,EAA5B,GAAiCjC,CAAC,GAAGA,CAAJ,GAAQkC,EAAhD;AACD;;AAED,SAAS9B,sBAAT,CACEgC,MADF,EACkBC,MADlB,EACkCC,GADlC,EAC+CC,GAD/C,EAC4DC,IAD5D,EAC0EC,IAD1E,EACwFC,QADxF,EAC0G;AACxG,SAAO;AACLzF,IAAAA,CAAC,EAAG8E,gBAAgB,CAACW,QAAD,EAAWN,MAAX,EAAmBE,GAAnB,EAAwBE,IAAxB,CADf;AAELtF,IAAAA,CAAC,EAAG6E,gBAAgB,CAACW,QAAD,EAAWL,MAAX,EAAmBE,GAAnB,EAAwBE,IAAxB;AAFf,GAAP;AAID,C,CAED;;;AACA,SAASjC,WAAT,CAAsBR,CAAtB,EAAiC2C,CAAjC,EAA4CC,CAA5C,EAAuDC,CAAvD,EAAkE;AAChE7C,EAAAA,CAAC,IAAI6C,CAAL;AACA,SAAO,CAACD,CAAD,GAAK5C,CAAL,IAAUA,CAAC,GAAG,CAAd,IAAmB2C,CAA1B;AACD;;AAED,eAAe7G,OAAf",
	"sourcesContent": [
		"import * as modifiers from '@interactjs/modifiers/base'\nimport Modification from '@interactjs/modifiers/Modification'\nimport offset from '@interactjs/offset'\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport * as is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  // eslint-disable-next-line no-shadow\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number        // the lambda in exponential decay\n      minSpeed?: number          // target speed must be above this for inertia to start\n      endSpeed?: number          // the speed at which inertia is slow enough to stop\n      allowResume?: true         // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<Interact.DoPhaseArg<Interact.ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': Interact.DoPhaseArg<Interact.ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': Interact.DoPhaseArg<Interact.ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<Interact.DoPhaseArg<Interact.ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': Interact.DoPhaseArg<Interact.ActionName, 'resume'>\n    'interactions:after-action-resume': Interact.DoPhaseArg<Interact.ActionName, 'resume'>\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    defaults,\n  } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled          : false,\n    resistance       : 10,    // the lambda in exponential decay\n    minSpeed         : 100,   // target speed must be above this for inertia to start\n    endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n    allowResume      : true,  // allow resuming an action in inertia phase\n    smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification: Modification = null\n  modifierCount = 0\n  modifierArg: modifiers.ModifierArg = null\n\n  startCoords: Interact.Point = null\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset: Interact.Point = null\n  modifiedOffset: Interact.Point = null\n  currentOffset: Interact.Point = null\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout: number = null\n\n  constructor (\n    private readonly interaction: Interact.Interaction,\n  ) {}\n\n  start (event: Interact.PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = {\n      interaction,\n      interactable: interaction.interactable,\n      element: interaction.element,\n      rect: interaction.rect,\n      edges: interaction.edges,\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    }\n\n    const thrown = (\n      (this.t0 - interaction.coords.cur.timeStamp) < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n    )\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia () {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.timeout = raf.request(() => this.inertiaTick())\n  }\n\n  startSmoothEnd () {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.timeout = raf.request(() => this.smoothEndTick())\n  }\n\n  inertiaTick () {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress =  1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Interact.Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0, 0,\n          this.targetOffset.x, this.targetOffset.y,\n          this.modifiedOffset.x, this.modifiedOffset.y,\n          progress,\n        )\n      }\n      else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.timeout = raf.request(() => this.inertiaTick())\n    }\n    else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick () {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.timeout = raf.request(() => this.smoothEndTick())\n    }\n    else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume ({ pointer, event, eventTarget }: Interact.SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end () {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop () {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start ({ interaction, event }: Interact.DoPhaseArg<Interact.ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume (arg: Interact.SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) { return }\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop ({ interaction }: { interaction: Interact.Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions ({ interactable, prepared }: Interact.Interaction) {\n  return interactable &&\n    interactable.options &&\n    prepared.name &&\n    interactable.options[prepared.name].inertia\n}\n\nconst inertia: Interact.Plugin = {\n  id: 'inertia',\n  before: ['modifiers/base'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': arg => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': arg => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': arg => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': arg => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue (t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint (\n  startX: number, startY: number, cpX: number, cpY: number, endX: number, endY: number, position: number) {\n  return {\n    x:  _getQBezierValue(position, startX, cpX, endX),\n    y:  _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad (t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n"
	]
}